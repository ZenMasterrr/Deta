import { jsx, jsxs } from 'react/jsx-runtime';
import { css, cx } from '@emotion/css';
import { useState, useMemo, useLayoutEffect, useRef } from 'react';
import { __rest } from 'tslib';
import cx$1 from 'classnames';

const MAX_FONT_SIZE = 16 * 15;
function useTextStyle(ref, text, options) {
    var _a;
    const [containerWidth, setWidth] = useState(0);
    const observer = useMemo(() => new window.ResizeObserver((entries) => {
        if (entries[0]) {
            setWidth(entries[0].contentRect.width);
        }
    }), []);
    useLayoutEffect(() => {
        if (ref.current) {
            observer.observe(ref.current);
            return () => observer.disconnect();
        }
    }, [ref.current]);
    const [style, setStyle] = useState({ fontSize: 0, width: 0, height: 0 });
    const maxFontSize = (_a = options === null || options === void 0 ? void 0 : options.maxFontSize) !== null && _a !== void 0 ? _a : 1024;
    useLayoutEffect(() => {
        if (ref.current && containerWidth > 0) {
            const container = ref.current;
            const inspector = document.createElement('div');
            inspector.style.position = 'fixed';
            inspector.style.pointerEvents = 'none';
            inspector.style.opacity = '0';
            inspector.innerText = text;
            container.appendChild(inspector);
            document.fonts.ready.then(() => {
                let fontSize = MAX_FONT_SIZE;
                // while (MIN_FONT_SIZE < fontSize) {
                inspector.style.fontSize = `${~~fontSize}px`;
                const rect = inspector.getBoundingClientRect();
                // if (rect.width <= containerWidth) {
                //   break;
                // }
                // fontSize = fontSize * 0.9;
                fontSize = Math.min(~~((fontSize * containerWidth) / rect.width), maxFontSize);
                console.log(fontSize);
                inspector.style.fontSize = `${fontSize}px`;
                // }
                const { width, height } = inspector.getBoundingClientRect();
                // setStyle({ fontSize: parseInt(window.getComputedStyle(inspector).fontSize), width, height });
                setStyle({ fontSize, width, height });
                container.removeChild(inspector);
            });
        }
    }, [ref, text, containerWidth, maxFontSize]);
    return style;
}

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$3 = ".Stroke-module_container__spTY9 {\n  white-space: nowrap;\n  text-align: center;\n}\n\n.Stroke-module_stroke__CnDKp {\n  -webkit-text-stroke-color: #111827;\n  -moz-text-stroke-color: #111827;\n  color: transparent;\n}\n\n.Stroke-module_shadow__S6tUf {\n  text-shadow: 6px 6px #db2777;\n}";
var styles$3 = {"container":"Stroke-module_container__spTY9","stroke":"Stroke-module_stroke__CnDKp","shadow":"Stroke-module_shadow__S6tUf"};
styleInject(css_248z$3);

// console.log(css);
const DEFAULT_SHADOW_COLOR = '#5fc6fa';
// see: https://codepen.io/markmead/pen/YjQKeZ
function Stroke({ text, maxFontSize, shadow, fillColor, shadowColor = DEFAULT_SHADOW_COLOR }) {
    const ref = useRef(null);
    const textSize = useTextStyle(ref, text !== null && text !== void 0 ? text : '', { maxFontSize });
    // const {fontSuze}
    const { fontSize } = textSize;
    const a = useMemo(() => {
        const shadowOffset = fontSize / 30;
        const strokeWidth = fontSize / 90;
        // @include stroke-width(2px);
        return css `
      .${styles$3.shadow} {
        text-shadow: ${shadowOffset}px ${shadowOffset}px ${shadowColor};
      }
      .${styles$3.stroke} {
        -webkit-text-stroke-width: ${strokeWidth}px;
        -moz-text-stroke-width: ${strokeWidth}px;
      }
      ${fillColor
            ? `.${styles$3.stroke} {
          color: ${fillColor}
      }`
            : ''}
    `;
    }, [fontSize, fillColor, shadowColor]);
    return (jsx("div", { ref: ref, className: cx(styles$3.container, a), children: jsx("span", { className: cx(styles$3.stroke, shadow && styles$3.shadow), style: textSize, children: text }) }));
}

var css_248z$2 = "@font-face {\n  font-family: \"Cafe24Ssurround\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/Cafe24Ssurround.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"TTTtangsbudaejjigaeB\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2212@1.0/TTTtangsbudaejjigaeB.woff2\") format(\"woff2\");\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"GmarketSansMedium\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n.Milky-module_container__bAoT2 {\n  font-family: \"TTTtangsbudaejjigaeB\";\n  white-space: nowrap;\n  text-align: center;\n}\n\n.Milky-module_milky__ESg4v {\n  color: #f1ebe5;\n  text-shadow: 0 8px 9px #c4b59d, 0px -2px 1px #fff;\n  font-weight: bold;\n}";
var styles$2 = {"container":"Milky-module_container__bAoT2","milky":"Milky-module_milky__ESg4v"};
styleInject(css_248z$2);

// see: https://codepen.io/juanbrujo/pen/ZEzKRx
function Milky({ text }) {
    const ref = useRef(null);
    const textSize = useTextStyle(ref, text !== null && text !== void 0 ? text : '');
    return (jsx("div", { ref: ref, className: styles$2.container, children: jsx("span", { className: cx$1(styles$2.milky), style: textSize, children: text }) }));
}

var css_248z$1 = "@font-face {\n  font-family: \"Cafe24Ssurround\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/Cafe24Ssurround.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"TTTtangsbudaejjigaeB\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2212@1.0/TTTtangsbudaejjigaeB.woff2\") format(\"woff2\");\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"GmarketSansMedium\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\nsvg {\n  background: #ebe7e0;\n}\n\ntext {\n  fill: #35322a;\n  filter: url(\"#money\");\n  font-family: \"TTTtangsbudaejjigaeB\";\n  font-size: 120px;\n  font-weight: 900;\n}";
var styles$1 = {};
styleInject(css_248z$1);

// see: https://codepen.io/team/codeschool/pen/BKrRwg/
function SecondShadow({ text }) {
    return (jsx("div", { className: styles$1.root, children: jsxs("svg", { width: "600", height: "200", children: [jsxs("filter", { id: "money", children: [jsx("feMorphology", { in: "SourceGraphic", operator: "dilate", radius: "2", result: "expand" }), jsx("feOffset", { in: "expand", dx: "1", dy: "1", result: "shadow_1" }), jsx("feOffset", { in: "expand", dx: "2", dy: "2", result: "shadow_2" }), jsx("feOffset", { in: "expand", dx: "3", dy: "3", result: "shadow_3" }), jsx("feOffset", { in: "expand", dx: "4", dy: "4", result: "shadow_4" }), jsx("feOffset", { in: "expand", dx: "5", dy: "5", result: "shadow_5" }), jsx("feOffset", { in: "expand", dx: "6", dy: "6", result: "shadow_6" }), jsx("feOffset", { in: "expand", dx: "7", dy: "7", result: "shadow_7" }), jsxs("feMerge", { result: "shadow", children: [jsx("feMergeNode", { in: "expand" }), jsx("feMergeNode", { in: "shadow_1" }), jsx("feMergeNode", { in: "shadow_2" }), jsx("feMergeNode", { in: "shadow_3" }), jsx("feMergeNode", { in: "shadow_4" }), jsx("feMergeNode", { in: "shadow_5" }), jsx("feMergeNode", { in: "shadow_6" }), jsx("feMergeNode", { in: "shadow_7" })] }), jsx("feFlood", { "flood-color": "#ebe7e0" }), jsx("feComposite", { in2: "shadow", operator: "in", result: "shadow" }), jsx("feMorphology", { in: "shadow", operator: "dilate", radius: "1", result: "border" }), jsx("feFlood", { "flood-color": "#35322a", result: "border_color" }), jsx("feComposite", { in2: "border", operator: "in", result: "border" }), jsx("feOffset", { in: "border", dx: "1", dy: "1", result: "secondShadow_1" }), jsx("feOffset", { in: "border", dx: "2", dy: "2", result: "secondShadow_2" }), jsx("feOffset", { in: "border", dx: "3", dy: "3", result: "secondShadow_3" }), jsx("feOffset", { in: "border", dx: "4", dy: "4", result: "secondShadow_4" }), jsx("feOffset", { in: "border", dx: "5", dy: "5", result: "secondShadow_5" }), jsx("feOffset", { in: "border", dx: "6", dy: "6", result: "secondShadow_6" }), jsx("feOffset", { in: "border", dx: "7", dy: "7", result: "secondShadow_7" }), jsx("feOffset", { in: "border", dx: "8", dy: "8", result: "secondShadow_8" }), jsx("feOffset", { in: "border", dx: "9", dy: "9", result: "secondShadow_9" }), jsx("feOffset", { in: "border", dx: "10", dy: "10", result: "secondShadow_10" }), jsx("feOffset", { in: "border", dx: "11", dy: "11", result: "secondShadow_11" }), jsxs("feMerge", { result: "secondShadow", children: [jsx("feMergeNode", { in: "border" }), jsx("feMergeNode", { in: "secondShadow_1" }), jsx("feMergeNode", { in: "secondShadow_2" }), jsx("feMergeNode", { in: "secondShadow_3" }), jsx("feMergeNode", { in: "secondShadow_4" }), jsx("feMergeNode", { in: "secondShadow_5" }), jsx("feMergeNode", { in: "secondShadow_6" }), jsx("feMergeNode", { in: "secondShadow_7" }), jsx("feMergeNode", { in: "secondShadow_8" }), jsx("feMergeNode", { in: "secondShadow_9" }), jsx("feMergeNode", { in: "secondShadow_10" }), jsx("feMergeNode", { in: "secondShadow_11" })] }), jsx("feImage", { x: "0", y: "0", width: "600", height: "200", xlinkHref: "https://s3-us-west-2.amazonaws.com/s.cdpn.io/78779/stripes.svg" }), jsx("feComposite", { in2: "secondShadow", operator: "in", result: "secondShadow" }), jsxs("feMerge", { children: [jsx("feMergeNode", { in: "secondShadow" }), jsx("feMergeNode", { in: "border" }), jsx("feMergeNode", { in: "shadow" }), jsx("feMergeNode", { in: "SourceGraphic" })] })] }), jsx("text", { "dominant-baseline": "middle", "text-anchor": "middle", x: "50%", y: "50%", children: text })] }) }));
}

var css_248z = "@import url(\"https://fonts.googleapis.com/css?family=Amatic+SC:400,700\");\n@font-face {\n  font-family: \"EarlyFontDiary\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_220508@1.0/EarlyFontDiary.woff2\") format(\"woff2\");\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"KCC-DodamdodamR\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2302@1.0/KCC-DodamdodamR.woff2\") format(\"woff2\");\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"UhBeeMiMi\";\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_five@.2.0/UhBeeMiMi.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n.Squiggly-module_test__nlpt5 {\n  -webkit-animation: Squiggly-module_squiggly-anim__OQWV5 0.34s linear infinite;\n  animation: Squiggly-module_squiggly-anim__OQWV5 0.34s linear infinite;\n  font-family: \"UhBeeMiMi\";\n  font-size: 100px;\n}\n\np {\n  margin: 0;\n}\n\n@-webkit-keyframes Squiggly-module_squiggly-anim__OQWV5 {\n  0% {\n    filter: url(\"#squiggly-0\");\n  }\n  25% {\n    filter: url(\"#squiggly-1\");\n  }\n  50% {\n    filter: url(\"#squiggly-2\");\n  }\n  75% {\n    filter: url(\"#squiggly-3\");\n  }\n  100% {\n    filter: url(\"#squiggly-4\");\n  }\n}\n@keyframes Squiggly-module_squiggly-anim__OQWV5 {\n  0% {\n    filter: url(\"#squiggly-0\");\n  }\n  25% {\n    filter: url(\"#squiggly-1\");\n  }\n  50% {\n    filter: url(\"#squiggly-2\");\n  }\n  75% {\n    filter: url(\"#squiggly-3\");\n  }\n  100% {\n    filter: url(\"#squiggly-4\");\n  }\n}\n.Squiggly-module_svg__wtGEq {\n  display: none;\n}";
var styles = {"test":"Squiggly-module_test__nlpt5","squiggly-anim":"Squiggly-module_squiggly-anim__OQWV5","svg":"Squiggly-module_svg__wtGEq"};
styleInject(css_248z);

// see: https://codepen.io/lbebber/pen/KwGEQv/
function Squiggly({ text }) {
    return (jsxs("div", { className: styles.root, children: [jsx("div", { className: styles.test, children: text }), jsx("svg", { className: styles.svg, xmlns: "http://www.w3.org/2000/svg", version: "1.1", children: jsxs("defs", { children: [jsxs("filter", { id: "squiggly-0", children: [jsx("feTurbulence", { id: "turbulence", baseFrequency: "0.02", numOctaves: "3", result: "noise", seed: "0" }), jsx("feDisplacementMap", { id: "displacement", in: "SourceGraphic", in2: "noise", scale: "6" })] }), jsxs("filter", { id: "squiggly-1", children: [jsx("feTurbulence", { id: "turbulence", baseFrequency: "0.02", numOctaves: "3", result: "noise", seed: "1" }), jsx("feDisplacementMap", { in: "SourceGraphic", in2: "noise", scale: "8" })] }), jsxs("filter", { id: "squiggly-2", children: [jsx("feTurbulence", { id: "turbulence", baseFrequency: "0.02", numOctaves: "3", result: "noise", seed: "2" }), jsx("feDisplacementMap", { in: "SourceGraphic", in2: "noise", scale: "6" })] }), jsxs("filter", { id: "squiggly-3", children: [jsx("feTurbulence", { id: "turbulence", baseFrequency: "0.02", numOctaves: "3", result: "noise", seed: "3" }), jsx("feDisplacementMap", { in: "SourceGraphic", in2: "noise", scale: "8" })] }), jsxs("filter", { id: "squiggly-4", children: [jsx("feTurbulence", { id: "turbulence", baseFrequency: "0.02", numOctaves: "3", result: "noise", seed: "4" }), jsx("feDisplacementMap", { in: "SourceGraphic", in2: "noise", scale: "6" })] })] }) })] }));
}

function TextEffect(_a) {
    var { text = '' } = _a, props = __rest(_a, ["text"]);
    const texts = text
        .split('\n')
        .map((e) => e.trim())
        .filter(Boolean);
    return texts.length > 0
        ? texts.map((text, i) => {
            return jsx(TextEffectInner, Object.assign({ text: text }, props), i);
        })
        : null;
}
function TextEffectInner(_a) {
    var { text = '' } = _a, props = __rest(_a, ["text"]);
    if (props.type === 'stroke') {
        const rest = __rest(props, ["type"]);
        return jsx(Stroke, Object.assign({ text: text }, rest));
    }
    else if (props.type === 'milky') {
        const rest = __rest(props, ["type"]);
        return jsx(Milky, Object.assign({ text: text }, rest));
    }
    else if (props.type === 'second-shadow') {
        const rest = __rest(props, ["type"]);
        return jsx(SecondShadow, Object.assign({ text: text }, rest));
    }
    else if (props.type === 'squiggly') {
        const rest = __rest(props, ["type"]);
        return jsx(Squiggly, Object.assign({ text: text }, rest));
    }
    return null;
}

export { Stroke, TextEffect };
//# sourceMappingURL=text-effect.es.js.map
